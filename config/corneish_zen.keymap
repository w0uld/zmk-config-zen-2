#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/* userspace modules */
#include "resources/keypos_42keys.h"
#include "resources/z_combo.h"      // Z_COMBO
#include "resources/z_modmorph.h"   // Z_MODMORPH
#include "resources/z_macro.h"      // macro_github

/* layer aliases */
#define DVRK 0
#define QWER 1
#define GAME 2
#define ACNT 3
#define NMBR 4
#define NAVI 5

#undef Z_ALL
#define Z_ALL 0 1 2 3 4 5

/* variables */
#define _TIME_ZERO  0
#define _QUIKTAP_MS 250
#define _TAPTERM_MS 200
#define _PRIOR_IDLE 250
#define _COMBO_SHRT 20
#define _COMBO_MEDM 30
#define _COMBO_LONG 50

/* key matrix setup */
/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    // zmk,matrix_transform = &five_column_transform;
  };
};

/* adjustments */
    &mt {
        quick_tap_ms = <_QUIKTAP_MS>;
        tapping_term_ms = <_TAPTERM_MS>;
        flavor = "hold-preferred";  //originally balanced
        retro-tap;                  //enabling retro-tap
    };

    &lt {
        quick_tap_ms = <_QUIKTAP_MS>;
        tapping_term_ms = <_TAPTERM_MS>;
        flavor = "balanced";
        retro-tap;                  //enabling retro-tap
    };

/* behaviors */
/ {
    behaviors {
        _lt: alternative_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "ALT_LAYERTAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";  // hold-preferred vs regular layer binds
            quick_tap_ms = <_TIME_ZERO>;
            tapping_term_ms = <_TAPTERM_MS>;
            bindings = <&mo>, <&kp>;
            retro-tap;
        };
    };
};

/* autoshift */
#define AS(keycode) &z_autoshift LS(keycode) keycode
/ {
    behaviors {
        z_autoshift: z_autoshift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            quick_tap_ms = <_QUIKTAP_MS>;
            tapping_term_ms = <_TAPTERM_MS>;
            bindings = <&kp>, <&kp>;
        };
    };
};


/* mod morph, uses z_modmorph.h */
// syntax: Z_MODMORPH(name, regular_binding, morph_binding, morph_mods, keep_mods)

Z_MODMORPH(acc_f15,   A,      F15, (MOD_RSFT), )
Z_MODMORPH(acc_f16,   O,      F16, (MOD_RSFT), )
Z_MODMORPH(acc_f17,   E,      F17, (MOD_RSFT), )
Z_MODMORPH(acc_f18,   U,      F18, (MOD_RSFT), )
Z_MODMORPH(acc_f19,   I,      F19, (MOD_RSFT), )
Z_MODMORPH(acc_f20,   APOS,   F20, (MOD_RSFT), )
Z_MODMORPH(acc_f21,   COMMA,  F21, (MOD_RSFT), )
Z_MODMORPH(acc_f22,   DOT,    F22, (MOD_RSFT), )
Z_MODMORPH(acc_f23,   P,      F23, (MOD_RSFT), )


/* combos, uses z_combo.h */
// syntax: Z_COMBO(name, combo_bindings, keypos, combo_timeout, combo_prioridle, combo_layers)

Z_COMBO(combo_esc,          AS(ESC),        LT5 LT4,         _COMBO_SHRT, _PRIOR_IDLE, Z_ALL)
Z_COMBO(combo_backslash,    AS(BSLH),       LB5 LB4,         _COMBO_SHRT, _PRIOR_IDLE, Z_ALL)
Z_COMBO(combo_grave,        AS(GRAVE),      LH2 LH1,         _COMBO_SHRT, _PRIOR_IDLE, Z_ALL)

Z_COMBO(combo_copy,         &kp LC(INS),    LB3 LB2,         _COMBO_SHRT, _PRIOR_IDLE, Z_ALL)
Z_COMBO(combo_paste,        &kp LS(INS),    LB2 LB1,         _COMBO_SHRT, _PRIOR_IDLE, Z_ALL)

Z_COMBO(combo_lctrl,        &sk LCTRL,      LM1 LM2,         _COMBO_SHRT, _PRIOR_IDLE, DVRK QWER)
Z_COMBO(combo_rctrl,        &sk LCTRL,      RM1 RM2,         _COMBO_SHRT, _PRIOR_IDLE, DVRK QWER)
Z_COMBO(combo_lctrlshift,   &sk LS(LCTRL),  LM1 LM2 LM3,     _COMBO_SHRT, _PRIOR_IDLE, DVRK QWER)
Z_COMBO(combo_rctrlshift,   &sk LS(LCTRL),  RM1 RM2 RM3,     _COMBO_SHRT, _PRIOR_IDLE, DVRK QWER)

Z_COMBO(combo_locknum0,     &kp KP_NLCK,    RM5 RT5,         _COMBO_SHRT, _PRIOR_IDLE, DVRK QWER)
Z_COMBO(combo_lockcaps,     &kp CLCK,       RM5 RB5,         _COMBO_SHRT, _PRIOR_IDLE, DVRK QWER)
Z_COMBO(combo_lockscrl,     &kp SLCK,       RT5 RB5,         _COMBO_SHRT, _PRIOR_IDLE, DVRK QWER)

Z_COMBO(combo_layergame,    &tog GAME,      LH0 RH0,         _COMBO_SHRT, _PRIOR_IDLE, DVRK QWER GAME)
Z_COMBO(combo_layerqwer,    &tog QWER,      LH1 RH1,         _COMBO_SHRT, _PRIOR_IDLE, DVRK QWER)

Z_COMBO(combo_bltthclr,     &bt BT_CLR,     RT0 RB0,         _COMBO_SHRT, _PRIOR_IDLE, DVRK QWER)
Z_COMBO(combo_bltth1,       &bt BT_SEL 0,   RT1 RB1,         _COMBO_SHRT, _PRIOR_IDLE, DVRK QWER)
Z_COMBO(combo_bltth2,       &bt BT_SEL 1,   RT2 RB2,         _COMBO_SHRT, _PRIOR_IDLE, DVRK QWER)
Z_COMBO(combo_bltth3,       &bt BT_SEL 2,   RT3 RB3,         _COMBO_SHRT, _PRIOR_IDLE, DVRK QWER)
Z_COMBO(combo_bltth4,       &bt BT_SEL 3,   RT4 RB4,         _COMBO_SHRT, _PRIOR_IDLE, DVRK QWER)

Z_COMBO(combo_github,       &macro_github,  LT5 RT5,         _COMBO_SHRT, _PRIOR_IDLE, DVRK QWER) // uses z_macro.h


/* keymap */
/ {
    keymap {
            compatible = "zmk,keymap";

                dvorak_layer {
                        label = "DVRK";
                        bindings = <
// ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
      &lt NAVI TAB      &acc_f20        &acc_f21        &acc_f22        &acc_f23        &kp Y               &kp F           &kp G           &kp C           &kp R           &kp L           &kp FSLH
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
        &kp LCTRL       &acc_f15        &acc_f16        &acc_f17        &acc_f18        &acc_f19            &kp D           &kp H           &kp T           &kp N           &kp S           &kp MINUS
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
        &kp LSHFT       &kp SEMI        &kp Q           &kp J           &kp K           &kp X               &kp B           &kp M           &kp W           &kp V           &kp Z       &mt LSHFT EQUAL
// ╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
                                                        &kp LALT        &kp SPACE   &_lt NMBR SPACE      &lt NAVI BSPC      &kp RSHFT     &mt LGUI RET
//                                                 ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯

/*
// ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
      &lt NAVI TAB      &kp APOS        &kp COMMA       &kp DOT         &kp P           &kp Y               &kp F           &kp G           &kp C           &kp R           &kp L           &kp FSLH
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
        &kp LCTRL       &kp A           &kp O           &kp E           &kp U           &kp I               &kp D           &kp H           &kp T           &kp N           &kp S           &kp MINUS
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
        &kp LSHFT       &kp SEMI        &kp Q           &kp J           &kp K           &kp X               &kp B           &kp M           &kp W           &kp V           &kp Z       &mt LSHFT EQUAL
// ╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
                                                        &kp LALT        &kp SPACE   &_lt NMBR SPACE      &lt NAVI BSPC      &sl ACNT      &mt LGUI RET
//                                                 ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
*/
                        >;
                };

                qwerty_layer {
                        label = "QWER";
                        bindings = <
// ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
        &trans          &kp Q           &kp W           &kp E           &kp R           &kp T               &kp Y           &kp U           &kp I           &kp O           &kp P       &mt LGUI LBKT
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
        &trans          &kp A           &kp S           &kp D           &kp F           &kp G               &kp H           &kp J           &kp K           &kp L           &kp SEMI    &mt LCTRL APOS
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
        &trans          &kp Z           &kp X           &kp C           &kp V           &kp B               &kp N           &kp M           &kp COMMA       &kp DOT         &kp FSLH    &mt LSHFT RBKT
// ╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
                                                        &trans          &trans          &trans              &trans          &kp LSHFT       &trans
//                                                 ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
                        >;
                };

                gaming_layer {
                        label = "GAME";
                        bindings = <
// ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
        &trans          &kp T           &kp Q           &kp W           &kp E           &kp R               &kp Y           &kp PG_UP       &kp UP          &kp PG_DN       &kp P           &trans
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
        &kp I           &kp LSHFT       &kp A           &kp S           &kp D           &kp F               &kp H           &kp LEFT        &kp DOWN        &kp RIGHT       &kp SEMI        &trans
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
        &kp G           &kp LCTRL       &kp Z           &kp X           &kp C           &kp V               &kp N           &kp M           &kp COMMA       &kp DOT         &kp FSLH        &trans
// ╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
                                                        &trans          &trans          &trans              &trans          &tog GAME       &trans
//                                                 ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
                        >;
                };

                accent_layer {
                        label = "ACNT";
                        bindings = <
// ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
        &trans          &kp F20         &kp F21         &kp F22         &kp F23         &trans              &trans          &trans          &trans          &trans          &trans          &trans
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
        &trans          &kp F15         &kp F16         &kp F17         &kp F18         &kp F19             &trans          &trans          &trans          &trans          &trans          &trans
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
        &trans          &trans          &trans          &trans          &trans          &trans              &trans          &trans          &trans          &trans          &trans          &trans
// ╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
                                                        &trans          &trans          &trans              &trans          &trans          &trans
//                                                 ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
                        >;
                };

                number_layer {
                        label = "NMBR";
                        bindings = <
// ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
        &trans          AS(N1)          AS(N2)          AS(N3)          AS(N4)          AS(N5)              AS(LPAR)        AS(N7)          AS(N8)          AS(N9)          AS(RPAR)        &trans
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
        &trans          &kp LGUI        &kp LALT        &kp LCTRL       &kp LSHFT       &kp F13             AS(LBKT)        AS(N4)          AS(N5)          AS(N6)          AS(RBKT)        &trans
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
        &trans          AS(SEMI)        AS(APOS)        AS(COMMA)       AS(DOT)         &kp KP_DOT          AS(GRAVE)       AS(N1)          AS(N2)          AS(N3)          AS(BSLH)        &trans
// ╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
                                                        &trans          &trans          &trans              &trans          AS(N0)          &kp KP_DOT
//                                                 ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
                        >;
                };

                navigation_layer {
                        label = "NAVI";
                        bindings = <
// ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
        &trans          &kp F1          &kp F2          &kp F3          &kp F4          &kp F5          &kp PAUSE_BREAK     &kp PG_UP       &kp UP          &kp PG_DN       &kp HOME        &trans
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
        &trans        &mt LGUI F5     &mt LALT F6     &mt LCTRL F7    &mt LSHFT F8      &kp F13             &kp PSCRN       &kp LEFT        &kp DOWN        &kp RIGHT       &kp END         &trans
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
        &trans          &kp F9          &kp F10         &kp F11         &kp F12         &kp F14             &kp INS       &kp C_VOL_DN      &kp C_MUTE    &kp C_VOL_UP      &kp C_PP        &trans
// ╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
                                                        &trans          &trans          &trans              &trans          &kp DEL         &trans
//                                                 ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
                        >;
                };
        };
};
