#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/* Adding key mappings */
#include "resources/keypos_42keys.h"

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    // zmk,matrix_transform = &five_column_transform;
  };
};

/* Layer aliases */
#define DVRK 0
#define QWER 1
#define GAME 2
#define ACNT 3
#define NMBR 4
#define NAVI 5

/* Variables */
#define _TIME_ZERO  0
#define _QUIKTAP_MS 250
#define _TAPTERM_MS 200
#define _PRIOR_IDLE 150
#define _COMBO_SHRT 20
#define _COMBO_MEDM 30
#define _COMBO_LONG 50


/* Adjustments */
    &mt {
        quick_tap_ms = <_QUIKTAP_MS>;
        tapping_term_ms = <_TAPTERM_MS>;
        flavor = "hold-preferred";  //originally balanced
        retro-tap;                  //enabling retro-tap
    };

    &lt {
        quick_tap_ms = <_QUIKTAP_MS>;
        tapping_term_ms = <_TAPTERM_MS>;
        flavor = "balanced";
        retro-tap;                  //enabling retro-tap
    };


/* Behaviors */
/ {
    behaviors {
        _lt: alternative_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "ALT_LAYERTAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";  // hold-preferred vs regular layer binds
            quick_tap_ms = <_TIME_ZERO>;
            tapping_term_ms = <_TAPTERM_MS>;
            bindings = <&mo>, <&kp>;
            retro-tap;
        };
    };
};


/* Autoshift definition */
#define AS(keycode) &_autoshift LS(keycode) keycode

/ {
    behaviors {
        _autoshift: _autoshift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            quick_tap_ms = <_QUIKTAP_MS>;
            tapping_term_ms = <_TAPTERM_MS>;
            bindings = <&kp>, <&kp>;
        };
    };
};


/* Mod-Morph setup (credit goes to caksoylar) */
#define MM_ACCENT(name, regular_binding, morph_binding) \
 / { \
        behaviors { \
            name: name { \
                compatible = "zmk,behavior-mod-morph"; \
                label = ZMK_MACRO_STRINGIFY(_mma_ ## name); \
                #binding-cells = <0>; \
                bindings = <&kp regular_binding>, <&kp morph_binding>; \
                mods = <(MOD_RALT)>; \
            }; \
        }; \
    };

MM_ACCENT(_mma_a,       A,      F15)
MM_ACCENT(_mma_o,       O,      F16)
MM_ACCENT(_mma_e,       E,      F17)
MM_ACCENT(_mma_u,       U,      F18)
MM_ACCENT(_mma_i,       I,      F19)
MM_ACCENT(_mma_apos,    APOS,   F20)
MM_ACCENT(_mma_comma,   COMMA,  F21)
MM_ACCENT(_mma_dot,     DOT,    F22)
MM_ACCENT(_mma_p,       P,      F23)



/* Combos, syntax idea taken from Urob: https://github.com/urob/zmk-nodefree-config */

#define COMBO_HOOK
#define Z_COMBO(name, combo_bindings, keypos, combo_layers, combo_timeout, combo_prioridle) \
    / { \
        combos { \
            compatible = "zmk,combos"; \
            combo_ ## name { \
                bindings = <combo_bindings>; \
                key-positions = <keypos>; \
                layers = <combo_layers>; \
                timeout-ms = <combo_timeout>; \
                require-prior-idle-ms = <combo_prioridle>; \
            }; \
        }; \
    };

Z_COMBO(combo_esc,          AS(ESC),        LT5 LT4,     ALL, _COMBO_SHRT, _PRIOR_IDLE)
Z_COMBO(combo_backslash,    AS(BSLH),       LB5 LB4,     ALL, _COMBO_SHRT, _PRIOR_IDLE)
Z_COMBO(combo_grave,        AS(GRAVE),      LH2 LH1,     ALL, _COMBO_SHRT, _PRIOR_IDLE)

Z_COMBO(combo_copy,         &kp LC(INS),    LB4 LB3 LB2, ALL, _COMBO_SHRT, _PRIOR_IDLE)
Z_COMBO(combo_paste,        &kp LS(INS),    LB3 LB2 LB1, ALL, _COMBO_SHRT, _PRIOR_IDLE)

Z_COMBO(combo_lctrl,        &sk LCTRL,      LM1 LM2,     ALL, _COMBO_SHRT, _PRIOR_IDLE)
Z_COMBO(combo_rctrl,        &sk LCTRL,      RM1 RM2,     ALL, _COMBO_SHRT, _PRIOR_IDLE)
Z_COMBO(combo_lctrlshift,   &sk LS(LCTRL),  LM1 LM2 LM3, ALL, _COMBO_SHRT, _PRIOR_IDLE)
Z_COMBO(combo_rctrlshift,   &sk LS(LCTRL),  RM1 RM2 RM3, ALL, _COMBO_SHRT, _PRIOR_IDLE)

Z_COMBO(combo_locknum0,     &kp KP_NLCK,    RH0 RT0,     ALL, _COMBO_SHRT, _PRIOR_IDLE)
Z_COMBO(combo_lockcaps,     &kp KP_CLCK,    RH0 RM0,     ALL, _COMBO_SHRT, _PRIOR_IDLE)
Z_COMBO(combo_lockscrl,     &kp KP_SLCK,    RH0 RB0,     ALL, _COMBO_SHRT, _PRIOR_IDLE)

Z_COMBO(combo_layergame,    &tog GAME,      RH0 RH2,     ALL, _COMBO_SHRT, _PRIOR_IDLE)
Z_COMBO(combo_layerqwer,    &tog QWER,      LH0 LH2,     ALL, _COMBO_SHRT, _PRIOR_IDLE)

Z_COMBO(combo_bltthclr,     &bt BT_CLR,     LT0 LB0,     ALL, _COMBO_SHRT, _PRIOR_IDLE)
Z_COMBO(combo_bltth1,       &bt BT_SEL 0,   LT1 LB1,     ALL, _COMBO_SHRT, _PRIOR_IDLE)
Z_COMBO(combo_bltth2,       &bt BT_SEL 1,   LT2 LB2,     ALL, _COMBO_SHRT, _PRIOR_IDLE)
Z_COMBO(combo_bltth3,       &bt BT_SEL 2,   LT2 LB3,     ALL, _COMBO_SHRT, _PRIOR_IDLE)
Z_COMBO(combo_bltth4,       &bt BT_SEL 3,   LT2 LB4,     ALL, _COMBO_SHRT, _PRIOR_IDLE)
Z_COMBO(combo_github,       &macro_github,  RT0 RM0 RB0, ALL, _COMBO_SHRT, _PRIOR_IDLE)


/* Macros */
/ {
    macros {
        macro_github: macro_githublink {
            label = "macro_githublink";
            compatible = "zmk,behavior-macro";
            tap-ms = <5>;
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp H &kp T &kp T &kp P &kp S &kp COLON &kp FSLH &kp FSLH>
                , <&macro_tap &kp G &kp I &kp T &kp H &kp U &kp B &kp DOT &kp C &kp O &kp M &kp FSLH>
                , <&macro_tap &kp W &kp N0 &kp U &kp L &kp D &kp FSLH>
                ;
        };
    };
};




/* Keymap */

/ {
        keymap {
                compatible = "zmk,keymap";

                dvorak_layer {
                        label = "DVRK";
                        bindings = <
// ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
      &lt NAVI TAB      &_mma_apos      &_mma_comma     &_mma_dot       &_mma_p         &kp Y               &kp F           &kp G           &kp C           &kp R           &kp L           &kp FSLH
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
        &kp LCTRL       &_mma_a         &_mma_o         &_mma_e         &_mma_u         &_mma_i             &kp D           &kp H           &kp T           &kp N           &kp S           &kp MINUS
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
        &kp LSHFT       &kp SEMI        &kp Q           &kp J           &kp K           &kp X               &kp B           &kp M           &kp W           &kp V           &kp Z       &mt LSHFT EQUAL
// ╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
                                                        &kp LALT        &kp SPACE   &_lt NMBR SPACE      &lt NAVI BSPC      &kp RALT      &mt LGUI RET
//                                                 ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯

/*
// ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
      &lt NAVI TAB      &kp APOS        &kp COMMA       &kp DOT         &kp P           &kp Y               &kp F           &kp G           &kp C           &kp R           &kp L           &kp FSLH
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
        &kp LCTRL       &kp A           &kp O           &kp E           &kp U           &kp I               &kp D           &kp H           &kp T           &kp N           &kp S           &kp MINUS
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
        &kp LSHFT       &kp SEMI        &kp Q           &kp J           &kp K           &kp X               &kp B           &kp M           &kp W           &kp V           &kp Z       &mt LSHFT EQUAL
// ╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
                                                        &kp LALT        &kp SPACE   &_lt NMBR SPACE      &lt NAVI BSPC      &sl ACNT      &mt LGUI RET
//                                                 ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
*/
                        >;
                };

                qwerty_layer {
                        label = "QWER";
                        bindings = <
// ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
        &trans          &kp Q           &kp W           &kp E           &kp R           &kp T               &kp Y           &kp U           &kp I           &kp O           &kp P       &mt LGUI LBKT
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
        &trans          &kp A           &kp S           &kp D           &kp F           &kp G               &kp H           &kp J           &kp K           &kp L           &kp SEMI    &mt LCTRL APOS
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
        &trans          &kp Z           &kp X           &kp C           &kp V           &kp B               &kp N           &kp M           &kp COMMA       &kp DOT         &kp FSLH    &mt LSHFT RBKT
// ╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
                                                        &trans          &trans          &trans              &trans          &kp LSHFT       &trans
//                                                 ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
                        >;
                };

                gaming_layer {
                        label = "GAME";
                        bindings = <
// ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
        &trans          &kp T           &kp Q           &kp W           &kp E           &kp R               &kp Y           &kp PG_UP       &kp UP          &kp PG_DN       &kp P           &trans
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
        &kp I           &kp LSHFT       &kp A           &kp S           &kp D           &kp F               &kp H           &kp LEFT        &kp DOWN        &kp RIGHT       &kp SEMI        &trans
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
        &kp G           &kp LCTRL       &kp Z           &kp X           &kp C           &kp V               &kp N           &kp M           &kp COMMA       &kp DOT         &kp FSLH        &trans
// ╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
                                                        &trans          &trans          &trans              &trans          &tog GAME       &trans
//                                                 ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
                        >;
                };

                accent_layer {
                        label = "ACNT";
                        bindings = <
// ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
        &trans          &kp F20         &kp F21         &kp F22         &kp F23         &trans              &trans          &trans          &trans          &trans          &trans          &trans
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
        &trans          &kp F15         &kp F16         &kp F17         &kp F18         &kp F19             &trans          &trans          &trans          &trans          &trans          &trans
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
        &trans          &trans          &trans          &trans          &trans          &trans              &trans          &trans          &trans          &trans          &trans          &trans
// ╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
                                                        &caps_word      &trans          &trans              &trans          &trans          &trans
//                                                 ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
                        >;
                };

                number_layer {
                        label = "NMBR";
                        bindings = <
// ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
        &trans          AS(N1)          AS(N2)          AS(N3)          AS(N4)          AS(N5)              AS(LPAR)        AS(N7)          AS(N8)          AS(N9)          AS(RPAR)        &trans
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
        &trans          &kp LGUI        &kp LALT        &kp LCTRL       &kp LSHFT       &kp F13             AS(LBKT)        AS(N4)          AS(N5)          AS(N6)          AS(RBKT)        &trans
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
        &trans          AS(SEMI)        AS(APOS)        AS(COMMA)       AS(DOT)         &kp KP_DOT          AS(GRAVE)       AS(N1)          AS(N2)          AS(N3)          AS(BSLH)        &trans
// ╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
                                                        &trans          &trans          &trans              &trans          AS(N0)          &kp KP_DOT
//                                                 ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
                        >;
                };

                navigation_layer {
                        label = "NAVI";
                        bindings = <
// ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
        &trans          &kp F1          &kp F2          &kp F3          &kp F4          &kp F5          &kp PAUSE_BREAK     &kp PG_UP       &kp UP          &kp PG_DN       &kp HOME        &trans
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
        &trans        &mt LGUI F5     &mt LALT F6     &mt LCTRL F7    &mt LSHFT F8      &kp F13             &kp PSCRN       &kp LEFT        &kp DOWN        &kp RIGHT       &kp END         &trans
// ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
        &trans          &kp F9          &kp F10         &kp F11         &kp F12         &kp F14             &kp INS       &kp C_VOL_DN      &kp C_MUTE    &kp C_VOL_UP      &kp C_PP        &trans
// ╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
                                                        &trans          &trans          &trans              &trans          &kp DEL         &trans
//                                                 ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
                        >;
                };
        };
};
